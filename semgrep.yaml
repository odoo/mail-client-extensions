rules:
  - id: convert_html_content-without-where_column
    languages:
      - python
    message: Calling `snippets.convert_html_content` without filtering with the `where_column`
             argument is slow. Please specify it.
    severity: WARNING
    patterns:
      - pattern: $UPGRADE.snippets.convert_html_content(...)
      - pattern-not: $UPGRADE.snippets.convert_html_content(..., where_column=$_)
      - metavariable-pattern:
          metavariable: $UPGRADE
          pattern-either:
            - pattern: odoo.addons.base.maintenance.migrations.util
            - pattern: odoo.upgrade.util
  - id: manipulate-query-funcs-dont-execute
    languages: [python]
    message: The `format_query`/`explode_query`/`explode_query_range` functions don't execute the query.
             Call `cr.execute`/`util.explode_execute`/`util.parallel_execute` on the result.
    severity: ERROR
    patterns:
      - pattern: $UPGRADE.$FUNC(...)
      - pattern-not-inside: $_ = <... $UPGRADE.$FUNC(...) ...>
      - pattern-not-inside: $_(..., <... $UPGRADE.$FUNC(...) ...>, ...)
      - pattern-not-inside: return <... $UPGRADE.$FUNC(...) ...>
      - focus-metavariable: $FUNC
      - metavariable-pattern:
          metavariable: $FUNC
          pattern-either:
              - pattern: format_query
              - pattern: explode_query
              - pattern: explode_query_range
      - metavariable-pattern:
          metavariable: $UPGRADE
          pattern-either:
            - pattern: odoo.addons.base.maintenance.migrations.util
            - pattern: odoo.upgrade.util
            - pattern: odoo.addons.base.maintenance.migrations.util.pg
            - pattern: odoo.upgrade.util.pg

  - id: dont-execute-format-query
    languages: [python]
    message: Don't call `str.format` on queries. Don't f-string queries. Use `util.format_query`.
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: cr.execute($BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              cr.execute($QUERY, ...)
          - pattern: cr.mogrify($BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              cr.mogrify($QUERY, ...)
          - pattern: $UTIL.format_query(cr, $BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.format_query(cr, $BAD, ...)
          - pattern: $UTIL.explode_execute(cr, $BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.explode_execute(cr, $BAD, ...)
          - pattern: $UTIL.explode_query(cr, $BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.explode_query(cr, $BAD, ...)
          - pattern: $UTIL.explode_query_range(cr, $BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.explode_query_range(cr, $BAD, ...)
          - pattern: $UTIL.parallel_execute(cr, [..., $BAD, ...], ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.parallel_execute(cr, [..., $BAD, ...], ...)
          - pattern: $UTIL.recompute_fields(cr, ..., query=$BAD, ...)
          - pattern: |
              $QUERY = $BAD
              ...
              $UTIL.recompute_fields(cr, ..., query=$QUERY, ...)

      - focus-metavariable: $BAD
      - metavariable-pattern:
          metavariable: $BAD
          patterns:
            - pattern-either:
                - pattern: |
                    "...".format(...)
                - pattern: f"..."
            - pattern-regex: '^f?"'  # I don't know how to not match f-string in function calls

  - id: no-early-return
    languages: [python]
    message: Don't use early returns in the `migrate` function
    severity: ERROR
    options:
        implicit_return: false
    patterns:
        - pattern: return ...
        - pattern-inside: |
            def migrate(...):
                ...

        - pattern-not-inside: |
            def migrate(...):
                ...
                def $_(...):
                    ...
                ...
