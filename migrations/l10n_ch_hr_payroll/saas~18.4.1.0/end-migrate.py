from odoo.upgrade import util


def migrate(cr, version):
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_canton")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_tax_scale")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_municipality")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_religious_denomination")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_church_tax")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_marital_from")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_sv_as_number")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_work_canton")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_work_start_date")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_has_withholding_tax")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_residence_category")

    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_po_box")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_no_nationality")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_tax_scale_type")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_pre_defined_tax_scale")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_open_tax_scale")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_tax_specially_approved")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_concubinage")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_first_name")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_last_name")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_birthday")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_street")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_zip")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_city")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_country_id")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_revenues")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_work_end_date")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_spouse_residence_canton")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_cross_border_commuter")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_foreign_tax_id")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_cross_border_start")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_relationship_ceo")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_other_employment")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_total_activity_type")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_other_activity_percentage")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_other_activity_gross")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_working_days_in_ch")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_residence_type")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_weekly_residence_canton")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_weekly_residence_municipality")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_weekly_residence_address_street")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_weekly_residence_address_city")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_weekly_residence_address_zip")
    util.make_field_non_stored(cr, "hr.employee", "l10n_ch_flex_profiling")
