<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="post_upgrade_resize_image" model="ir.cron">
        <field name="name">Post Upgrade Resize Images</field>
        <field name="interval_number">1</field>
        <field name="interval_type">hours</field>
        <field name="numbercall">-1</field>
        <field name="model_id" ref="base.model_ir_attachment"/>
        <field name="state">code</field>
        <field name="code">
# Make sure we process all images by ordering on `write_date`
# and forcing to update the `write_date` in case the image coudln't be resized
# because it was not in the filestore.
images_to_resize = model.search(
    [("index_content", "=", "image_is_not_yet_resized"), ("res_field", "!=", False)], limit=1000, order="write_date ASC"
)
images_recomputed = model.browse()
images_left = model.browse()
for image in images_to_resize:
    if image.with_context(bin_size=True).datas:
        res_model = env[image.res_model]
        env.add_to_compute(res_model._fields[image.res_field], res_model.browse(image.res_id))
        images_recomputed |= image
    else:
        images_left |= image
images_recomputed.recompute()
images_recomputed.write({"index_content": "image"})
images_left.write({"index_content": "image_is_not_yet_resized"})
        </field>
    </record>
</odoo>
